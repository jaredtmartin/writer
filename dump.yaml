- fields: {class_name: FacebookOutlet, module_name: facebook, title: Facebook}
  model: articles.publishingoutlet
  pk: 1
- fields: {class_name: WordPressOutlet, module_name: wordpress, title: Post on Wordpress}
  model: articles.publishingoutlet
  pk: 2
- fields: {class_name: TwitterOutlet, module_name: twitter, title: Twitter}
  model: articles.publishingoutlet
  pk: 3
- fields: {class_name: MinMaxWordsValidator, module_name: standard, title: Minimum
      and Maximum Words}
  model: articles.validationplugin
  pk: 1
- fields: {class_name: ContainsKeywordsValidator, module_name: standard, title: Contains
      Keywords}
  model: articles.validationplugin
  pk: 2
- fields: {outlet: 2, pickled_data: KGRwMApTJ3VzZXJuYW1lJwpwMQpTJ21hamVlbScKcDIKc1MncGFzc3dvcmQnCnAzClMnOTk0NzgwNTU2NicKcDQKc1Mnc2VydmVyJwpwNQpTJ3d3dy53cml0ZXJheGlzLmNvbScKcDYKcy4=,
    user: 1}
  model: articles.publishingoutletconfiguration
  pk: 1
- fields: {name: Simple Articles}
  model: articles.articletype
  pk: 1
- fields: {name: Rewrites}
  model: articles.articletype
  pk: 2
- fields: {name: UAW Articles}
  model: articles.articletype
  pk: 3
- fields: {name: None, owner: 1}
  model: articles.project
  pk: 1
- fields:
    articles: []
    author: 1
    code: Assigned to Reviewer
    comment: ''
    timestamp: 2013-04-20 03:54:11+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 1
- fields:
    articles: []
    author: 1
    code: Claimed by Writer
    comment: ''
    timestamp: 2013-04-20 03:54:40+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 2
- fields:
    articles: []
    author: null
    code: Removed Reviewer
    comment: ''
    timestamp: 2013-05-15 19:46:21+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 3
- fields:
    articles: []
    author: null
    code: Removed Writer
    comment: ''
    timestamp: 2013-05-15 19:46:25+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 4
- fields:
    articles: []
    author: 1
    code: Claimed by Writer
    comment: ''
    timestamp: 2013-05-15 19:50:52+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 5
- fields:
    articles: []
    author: 2
    code: Submitted
    comment: ''
    timestamp: 2013-06-10 10:55:58+00:00
    timezone: ''
    user: 2
  model: articles.articleaction
  pk: 6
- fields:
    articles: []
    author: null
    code: Rejected
    comment: Ugly
    timestamp: 2013-06-10 10:56:40+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 7
- fields:
    articles: []
    author: null
    code: Rejected
    comment: Ugly
    timestamp: 2013-06-10 10:56:55+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 8
- fields:
    articles: []
    author: null
    code: Rejected
    comment: Ugly
    timestamp: 2013-06-10 10:59:02+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 9
- fields:
    articles: []
    author: null
    code: Rejected
    comment: Ugly
    timestamp: 2013-06-10 10:59:31+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 10
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-10 11:00:26+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 11
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-10 11:11:10+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 12
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-10 11:14:55+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 13
- fields:
    articles: []
    author: null
    code: Rejected
    comment: asd
    timestamp: 2013-06-10 11:15:14+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 14
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-18 02:35:33+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 15
- fields:
    articles: []
    author: null
    code: Rejected
    comment: Ugly
    timestamp: 2013-06-18 03:26:17+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 16
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-18 03:29:40+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 17
- fields:
    articles: []
    author: null
    code: Rejected
    comment: asd
    timestamp: 2013-06-18 03:30:02+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 18
- fields:
    articles: []
    author: 1
    code: Submitted
    comment: ''
    timestamp: 2013-06-18 04:03:51+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 19
- fields:
    articles: []
    author: 1
    code: Rejected
    comment: Yahoo
    timestamp: 2013-06-18 04:07:33+00:00
    timezone: ''
    user: 1
  model: articles.articleaction
  pk: 20
- fields: {confirmation: true, name: Myself, position: 1, requester: 1, user_asked: 1,
    worker: 1}
  model: articles.contact
  pk: 1
- fields: {confirmation: false, name: Fred, position: 1, requester: 1, user_asked: 1,
    worker: 2}
  model: articles.contact
  pk: 2
- fields: {confirmation: true, name: John, position: 1, requester: 1, user_asked: 1,
    worker: 3}
  model: articles.contact
  pk: 3
- fields: {confirmation: true, name: Bill, position: 2, requester: 1, user_asked: 1,
    worker: 4}
  model: articles.contact
  pk: 4
- fields: {confirmation: false, name: Susan, position: 2, requester: 1, user_asked: 1,
    worker: 5}
  model: articles.contact
  pk: 5
- fields: {confirmation: true, name: Gold, position: 1, requester: 1, user_asked: 1,
    worker: 3}
  model: articles.contact
  pk: 6
- fields: {confirmation: true, name: Gold, position: 1, requester: 1, user_asked: 1,
    worker: 4}
  model: articles.contact
  pk: 7
- fields: {confirmation: true, name: Suzy, position: 1, requester: 66, user_asked: 1,
    worker: 5}
  model: articles.contact
  pk: 8
- fields: {name: Web Sites}
  model: articles.category
  pk: 1
- fields: {approved: null, article_notes: '', article_type: 1, body: "<h3>autoescape</h3>\r\
      \n\r\n<p>Controls the current auto-escaping behavior. This tag takes either\
      \ <tt class=\"docutils literal\"><span class=\"pre\">on</span></tt> or <tt class=\"\
      docutils literal\"><span class=\"pre\">off</span></tt> as an argument and that\
      \ determines whether auto-escaping is in effect inside the block. The block\
      \ is closed with an <tt class=\"docutils literal\"><span class=\"pre\">endautoescape</span></tt>\
      \ ending tag.</p>\r\n\r\n<p>When auto-escaping is in effect, all variable content\
      \ has HTML escaping applied to it before placing the result into the output\
      \ (but after any filters have been applied). This is equivalent to manually\
      \ applying the <a class=\"reference internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-escape\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">escape</span></tt></a>\
      \ filter to each variable.</p>\r\n\r\n<p>The only exceptions are variables that\
      \ are already marked as &ldquo;safe&rdquo; from escaping, either by the code\
      \ that populated the variable, or because it has had the <a class=\"reference\
      \ internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-safe\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">safe</span></tt></a>\
      \ or <a class=\"reference internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-escape\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">escape</span></tt></a>\
      \ filters applied. Thompson</p>\r\n\r\n<h3>autoescape</h3>\r\n\r\n<p>Controls\
      \ the current auto-escaping behavior. This tag takes either <tt class=\"docutils\
      \ literal\"><span class=\"pre\">on</span></tt> or <tt class=\"docutils literal\"\
      ><span class=\"pre\">off</span></tt> as an argument and that determines whether\
      \ auto-escaping is in effect inside the block. The block is closed with an <tt\
      \ class=\"docutils literal\"><span class=\"pre\">endautoescape</span></tt> ending\
      \ tag.</p>\r\n\r\n<p>When auto-escaping is in effect, all variable content has\
      \ HTML escaping applied to it before placing the result into the output (but\
      \ after any filters have been applied). This is equivalent to manually applying\
      \ the <a class=\"reference internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-escape\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">escape</span></tt></a>\
      \ filter to each variable.</p>\r\n\r\n<p>The only exceptions are variables that\
      \ are already marked as &ldquo;safe&rdquo; from escaping, either by the code\
      \ that populated the variable, or because it has had the <a class=\"reference\
      \ internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-safe\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">safe</span></tt></a>\
      \ or <a class=\"reference internal\" href=\"https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-escape\"\
      ><tt class=\"xref std std-tfilter docutils literal\"><span class=\"pre\">escape</span></tt></a>\
      \ filters applied.</p>\r\n", category: null, deleted: false, description: '',
    expires: null, language: en, last_action: 19, maximum: 0, minimum: 100, owner: 1,
    price: '', priority: 1, project: 1, published: null, purpose: '', referrals: '',
    rejected: 20, review_notes: '', reviewer: null, reviewer_availability: Nobody,
    status: Submitted, style: '', submitted: null, tags: '', title: This is a Test,
    writer: 1, writer_availability: Nobody}
  model: articles.article
  pk: 12
- fields: {approved: null, article_notes: '', article_type: 1, body: '', category: null,
    deleted: false, description: '', expires: null, language: en, last_action: null,
    maximum: 0, minimum: 100, owner: 1, price: '', priority: 1, project: 1, published: null,
    purpose: '', referrals: '', rejected: null, review_notes: '', reviewer: null,
    reviewer_availability: Nobody, status: Unassigned, style: '', submitted: null,
    tags: '', title: '', writer: null, writer_availability: Nobody}
  model: articles.article
  pk: 13
- fields: {approved: null, article_notes: '', article_type: 1, body: '', category: null,
    deleted: false, description: '', expires: null, language: en, last_action: null,
    maximum: 0, minimum: 100, owner: 1, price: '', priority: 5, project: null, published: null,
    purpose: '', referrals: '', rejected: null, review_notes: '', reviewer: null,
    reviewer_availability: Nobody, status: Unassigned, style: '', submitted: null,
    tags: '', title: '', writer: null, writer_availability: Nobody}
  model: articles.article
  pk: 14
- fields: {article: 12, keyword: Thompson, times: 1, url: www.google.com}
  model: articles.keyword
  pk: 10
- fields: {article: 13, keyword: Johnson, times: 1, url: www.google.com}
  model: articles.keyword
  pk: 11
- fields: {access_token: '', preferred_mode: 2, timezone: Africa/Tunis, user: 1}
  model: articles.userprofile
  pk: 1
- fields: {access_token: null, preferred_mode: 1, timezone: America/Chicago, user: 2}
  model: articles.userprofile
  pk: 2
- fields: {access_token: null, preferred_mode: 1, timezone: America/Chicago, user: 3}
  model: articles.userprofile
  pk: 3
- fields: {access_token: null, preferred_mode: 1, timezone: America/Chicago, user: 4}
  model: articles.userprofile
  pk: 4
- fields: {access_token: '', preferred_mode: 1, timezone: America/Chicago, user: 5}
  model: articles.userprofile
  pk: 5
- fields: {access_token: null, preferred_mode: 1, timezone: America/Chicago, user: 66}
  model: articles.userprofile
  pk: 7
